# -*- coding: utf-8 -*-
"""BI Practical 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MtIZe4B_icEVftGQKy3GjiIPusJKSDfS
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Sample - Superstore.csv', encoding='latin-1') # or 'ISO-8859-1'

df.head()

# Step 2: Transformation
# Convert 'Order Date' and 'Ship Date' to datetime
df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Ship Date'] = pd.to_datetime(df['Ship Date'])

# Create 'Shipping Time' column
df['Shipping Time (days)'] = (df['Ship Date'] - df['Order Date']).dt.days

# Basic Data Cleaning (if needed)
df = df.dropna()  # Drop missing values (optional)

# 1. Sales vs Profit Scatter Plot
plt.figure(figsize=(5,5))
sns.scatterplot(x='Sales', y='Profit', hue='Category', data=df)
plt.title('Sales vs Profit by Category')
plt.show()

# hue means: Color the points differently based on a column's value.

# 2. Total Sales by Region (Bar Chart)
region_sales = df.groupby('Region')['Sales'].sum().reset_index()
sns.barplot(x='Region', y='Sales', data=region_sales)
plt.title('Total Sales by Region')
plt.show()

# 3. Profit by Sub-Category (Horizontal Bar Chart)
subcategory_profit = df.groupby('Sub-Category')['Profit'].sum().sort_values()
subcategory_profit.plot(kind='barh')
plt.title('Profit by Sub-Category')
plt.xlabel('Profit')
plt.show()

# 4. Sales Over Time (Line Chart)
df['Month'] = df['Order Date'].dt.to_period('M')
sales_over_time = df.groupby('Month')['Sales'].sum()
sales_over_time.plot()
plt.title('Sales Over Time (Monthly)')
plt.xlabel('Order Date')
plt.ylabel('Sales')
plt.show()

# 5. Discount vs Profit Scatter Plot
sns.scatterplot(x='Discount', y='Profit', data=df)
plt.title('Discount vs Profit')
plt.show()

# 6. Ship Mode Usage (Pie Chart)
ship_mode_counts = df['Ship Mode'].value_counts()
ship_mode_counts.plot(kind='pie', autopct='%1.1f%%', startangle=90)
plt.title('Ship Mode Usage')
plt.ylabel('')
plt.show()

# 7. Top 10 Products by Sales
top_products = df.groupby('Product Name')['Sales'].sum().sort_values(ascending=False).head(10)
sns.barplot(x=top_products.values, y=top_products.index)
plt.title('Top 10 Products by Sales')
plt.xlabel('Sales')
plt.ylabel('Product Name')
plt.show()